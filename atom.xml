<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[A2BGeek's Blog]]></title>
  <link href="http://a2bgeek.me/atom.xml" rel="self"/>
  <link href="http://a2bgeek.me/"/>
  <updated>2014-04-13T14:15:59+08:00</updated>
  <id>http://a2bgeek.me/</id>
  <author>
    <name><![CDATA[A2BGeek]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[离城兰州]]></title>
    <link href="http://a2bgeek.me/blog/2014/04/12/chi-cheng-lan-zhou.html/"/>
    <updated>2014-04-12T11:04:42+08:00</updated>
    <id>http://a2bgeek.me/blog/2014/04/12/chi-cheng-lan-zhou</id>
    <content type="html"><![CDATA[<p>作为一个程序员，我没什么文艺青年的细胞，写不出什么有feel的文章，但是最近两天兰州的水污染让我有感而发，突然觉得兰州不应该叫做金城，而是应该叫做离城，突然有一种不能再爱的赶脚，突然好想再听一遍宋冬野的《董小姐》，因为里面有一句歌词——“陌生的人，请给我一支兰州”。 从网上找到一篇关于兰州的文章，节选了一部分，这些代表了我所想的。</p>

<p>1978年改革开放前夕，兰州的地区生产总值（GDP）21.8亿元，名列全国20名左右，在省会城市中位列中游，而到2010年左右，兰州的GDP排名竟直接跌破全国前100。我不由地感叹，兰州的经济衰落速度，堪比坠崖。30余年来，兰州的经济指标不仅先后被郑州、太原、长沙、昆明、南宁、南昌、福州、合肥、乌鲁木齐、呼和浩特等十余个省会城市反超，而且更是被数以十计的非省会城市竞相秒杀。我只能说，惜哉，痛哉。回顾历史上兰州的几次辉煌，秦汉文明，已太过遥远，那时黄土高原还是一片郁郁葱葱的森林；隋唐盛世，也暂且不提，丝绸之路的繁华往来早已成为往事。我们就且从清朝看起，从清中期1764年，陕甘总督迁兰州府，兰州开始总督甘陕，抚控西北，“节制三秦，怀柔西域”，成为整个西北地区的中心城市；到清末洋务运动，兰州织呢局（中国第一家机器毛纺织厂）、甘肃制造局（今兰通厂）纷纷建立，黄河上第一座近代公路桥梁“第一桥”（今中山桥）建成通车，甘肃法政学堂（今兰州大学）成立；再到新中国初期，“共和国长子”——兰炼、兰化建厂，兰州成为新中国第一个石化重工业基地；最后到近年来，GDP在全国100位左右徘徊，城市综合实力逐年被大量城市超越，甚至连曾经周边毫不起眼的“小弟弟”城市们也都已经接连发出挑衅，跃跃欲试，兰州，已经俨然不像一个西北第二大城市的样子。我不禁要问，兰州，你去哪了？可是兰州还在这儿啊。在全国各大城市都在飞速发展的时候，兰州却一直都在缓步徐行，兰州近几十年来的衰败，有目共睹。</p>

<p>兰州的衰败是有很多原因的，地形因素便是其中之一，兰州市区是长的，不是有个笑话，一个西固的哥们大清早叫一个东岗的哥们：“快过来我请你吃饭”，然后他们吃的是晚饭。
<img src="http://a2bgeekblog.qiniudn.com/image/png/lanzhou.png" alt="" /></p>

<p>地形还不是兰州衰败的主要原因，兰州衰败的另一大因素是老国企的衰落。单就我所知道的，兰炼兰化排除在外，兰棉厂、三毛厂、兰高阀、玻璃厂、洗衣粉厂、兰州制桶厂、西固食品厂、兰石厂、兰通厂、二通厂、三通厂、一毛厂、二毛厂、四毛厂、客车厂、阀门厂、504，还有春风电视机厂，一个个揪心的名字，我相信这还只是兰州众多老国企之中的冰山一角，这些企业大都早已不复往日辉煌，破产或是名存实亡。</p>

<p>除了这两个因素以外，我认为最致命最核心的一个因素还是在于人才流失。兰州，这座黄土高原之上的城市，人才的流失远比他湿陷性黄土的流失要严重得多。有人说，十年内，从兰州大学流失的高水平人才，完全可以再办一所兰州大学。兰州，留不住人。兰州的小孩普遍从小被灌输着一个思想：“要去东南沿海大城市，要去东南沿海大城市，要去东南沿海大城市……”满脑子的“东南沿海大城市”，仿佛“只要出兰州，我就成功啦！”。事实上也的确这样，有本事的出兰州，没本事的留兰州，这几乎已经成为一个定律。于是兰州就这样培养人才，失去人才，培养人才，失去人才，周而复始，兰州也就几近变身一个向外输送人才，向内吸纳庸才的集散地。虽然占着一所985综合类大学，但是高端人才的流失，还是使兰州在最宝贵的资源上丧尽优势。当然这也是有其中复杂原因的，首先便是缘于兰州私企、外企的缺失，大部分公司都是工资低、待遇差，这样一来，高端人才就算是想留兰州都难。</p>

<p>兰州这座城市居住起来确实非常幸福舒适，换句官腔来说就是“宜居”，但是当“留兰州”与“好待遇”不可兼得时，不少人还是会选择“好待遇”，“人往高处走，水往低处流”，东部地区对人才的吸夺也是很正常的事情。但是，人才的流失还有一个更深层次的原因，那就是深深根植于兰州人心中的一种自卑情绪。有人说兰州人好面子，特别在意别人对自己的看法，这其实是自卑的一种体现。其实，兰州人更在意别人对兰州的看法。按理说，心理学上讲，一个人缺什么就会炫耀什么，可是兰州什么都不缺啊？是的，兰州什么都不缺，但就是缺一个他应得的、正常的、与之相符的名誉，这也正是我们急于这样做的原因。我们害怕的是别人误解了兰州，因为遍布全国各地（除了兰州）的那些所谓的“兰州拉面”早已把兰州的形象毁的是一干二净，殊不知那些面馆大多和兰州没有半毛钱关系，因为它们根本就不是兰州人开的。</p>

<p>最近几年，兰州好像也逐渐在苏醒、发力。地铁、会展中心、元通大桥、深安大桥、金雁大桥、红楼、金茂、兰州中心、兰渝铁路、中川城际、宝兰客专、西客站、还有每个兰州人津津乐道的第五个国家级新区——兰州新区。兰州新区的获批，一度被视为均在兰州生活工作过多年的胡锦涛、温家宝卸任前送给兰州人民的一个礼物。可是我们能抓住机遇么？建设的显然还是显示出兰州的风格——“慢半拍”。结果，2014年1月，国家在西部连批两个国家级新区：陕西西咸新区和贵州贵安新区。这下傻眼了，这消息无异于当头棒喝，敲醒了沉浸在获批国家级新区的喜悦中的兰州人民，兰州新区西北唯一国家级新区的优势全无，竞争压力很大。说实话，如果我不是兰州人，要投资，我应该会选择西咸，同样是国家级新区，为什么不选择在相对富庶便利的关中平原而要选择在黄土高原呢？也许我目光短浅，这样看来，兰州的崛起依旧举步维艰。</p>

<p>从兰州出来的乐队低苦艾说：“我们每年都会回来，和你们在这个破败的城市里相聚。”</p>

<blockquote><p>最后，用这个<a href="http://tv.sohu.com/20111017/n322444214.shtml">MV</a>来品味一下这座城市，我只能说，“一万个舍不得，不能回到从前了，爱你没有后悔过，只是应该结束了，一万个舍不得，我是永远爱你的，爱你我觉得值得，只是不能再爱了”。</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[BeautifulSoup实战]]></title>
    <link href="http://a2bgeek.me/blog/2014/04/09/beautifulsoupshi-zhan.html/"/>
    <updated>2014-04-09T09:08:31+08:00</updated>
    <id>http://a2bgeek.me/blog/2014/04/09/beautifulsoupshi-zhan</id>
    <content type="html"><![CDATA[<p>最近有个项目要用天气数据，看了一些天气网站，决定从<code>中国天气网</code>上抓数据，<code>python</code>抓数据的框架我知道的不多，只听过<code>BeautifulSoup</code>，下面记录一下使用<code>BeautifulSoup</code>抓取数据的全过程。<code>BeautifulSoup</code>的文档见<a href="http://www.crummy.com/software/BeautifulSoup/bs4/doc/index.zh.html">BeautifulSoup官方文档</a>。</p>

<h2>这里大概介绍一下<code>BeautifulSoup</code>的用法，它和javascript的dom一样，把html文档看做一棵树。</h2>

<ul>
<li>可以用下面的代码取得根节点：</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">bs4</span> <span class="kn">import</span> <span class="n">BeautifulSoup</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">urllib</span>
</span><span class='line'><span class="n">rawdata</span> <span class="o">=</span> <span class="n">urllib</span><span class="o">.</span><span class="n">urlopen</span><span class="p">(</span><span class="s">&quot;http://xxx.xxx.xx&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">soup</span> <span class="o">=</span> <span class="n">BeautifulSoup</span><span class="p">(</span><span class="n">rawdata</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>soup</code>就是根节点了，有了这个根节点就能遍历文档树了。</p>

<ul>
<li>find可以快速得到某一个或一簇标签：</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">head</span> <span class="o">=</span> <span class="n">soup</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="s">&#39;head&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以得到</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;head&gt;</span>
</span><span class='line'>    <span class="nt">&lt;title&gt;</span>...<span class="nt">&lt;title&gt;</span>
</span><span class='line'>    <span class="nt">&lt;style&gt;</span><span class="err">...&lt;style&gt;</span>
</span><span class='line'><span class="nt">&lt;/head&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>也可以加上id的限制:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">soup</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="nb">id</span><span class="o">=</span><span class="s">&quot;link3&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>find_all可以有选择地得到一些标签：</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">soup</span><span class="o">.</span><span class="n">find_all</span><span class="p">(</span><span class="s">&#39;a&#39;</span><span class="p">)</span>
</span><span class='line'><span class="c"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span>
</span><span class='line'><span class="c">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span>
</span><span class='line'><span class="c">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>.</code>也很常用：</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">soup</span><span class="o">.</span><span class="n">title</span>
</span><span class='line'><span class="c">#可以得到&lt;title&gt;The Dormouse&#39;s story&lt;/title&gt;</span>
</span><span class='line'><span class="n">soup</span><span class="o">.</span><span class="n">title</span><span class="o">.</span><span class="n">name</span>
</span><span class='line'><span class="c">#可以得到标签名</span>
</span><span class='line'><span class="n">soup</span><span class="o">.</span><span class="n">title</span><span class="o">.</span><span class="n">string</span>
</span><span class='line'><span class="c">#可以得到标签之间的文本</span>
</span><span class='line'><span class="n">soup</span><span class="o">.</span><span class="n">p</span><span class="p">[</span><span class="s">&#39;class&#39;</span><span class="p">]</span>
</span><span class='line'><span class="c">#可以得到p标签的class属性</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>contents也比较常用：</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">soup</span><span class="o">.</span><span class="n">body</span><span class="o">.</span><span class="n">contents</span>
</span><span class='line'><span class="c">#是一个list，包括了body的所有子节点，既有tag也有文本。</span>
</span></code></pre></td></tr></table></div></figure>


<h2>下面介绍抓取中国天气网数据的过程。</h2>

<p>首先打开网页<a href="http://www.weather.com.cn/weather/101160101.shtml">兰州天气</a>，再打开firebug找到我们需要抓取的部分。如图所示：
<img src="http://a2bgeekblog.qiniudn.com/image/png/beatifulsoup.png" alt="" />，其中<code>id="7d"</code>的<code>div</code>就是我们要抓取的部分。下面上代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">tag7d</span> <span class="o">=</span> <span class="n">soup</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="nb">id</span> <span class="o">=</span> <span class="s">&quot;7d&quot;</span><span class="p">)</span>
</span><span class='line'><span class="c">#得到id=&quot;7d&quot;的div</span>
</span><span class='line'><span class="n">tagweatherYubaoBox</span> <span class="o">=</span> <span class="n">tag7d</span><span class="o">.</span><span class="n">contents</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span>
</span><span class='line'><span class="c">#得到class=&quot;weatherYubaoBox&quot;的div</span>
</span><span class='line'><span class="n">resultset</span> <span class="o">=</span> <span class="p">[</span><span class="n">tagweatherYubaoBox</span><span class="o">.</span><span class="n">contents</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">.</span><span class="n">find_all</span><span class="p">(</span><span class="s">&quot;a&quot;</span><span class="p">),</span> <span class="n">tagweatherYubaoBox</span><span class="o">.</span><span class="n">contents</span><span class="p">[</span><span class="mi">9</span><span class="p">]</span><span class="o">.</span><span class="n">find_all</span><span class="p">(</span><span class="s">&quot;a&quot;</span><span class="p">),</span> <span class="n">tagweatherYubaoBox</span><span class="o">.</span><span class="n">contents</span><span class="p">[</span><span class="mi">13</span><span class="p">]</span><span class="o">.</span><span class="n">find_all</span><span class="p">(</span><span class="s">&quot;a&quot;</span><span class="p">)]</span>
</span><span class='line'><span class="c">#这里我只想取当天、明天、后天的天气，也就是class=&quot;yuBaoTable&quot;的前三个table，接下来就可以循环去数据了。</span>
</span><span class='line'><span class="n">result</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'><span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">resultset</span><span class="p">:</span>
</span><span class='line'>    <span class="n">tmp_dict</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'>    <span class="n">tmp_dict</span><span class="p">[</span><span class="s">&quot;date&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="n">item</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">string</span>
</span><span class='line'>    <span class="n">tmp_dict</span><span class="p">[</span><span class="s">&quot;imgurl&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="s">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">([</span><span class="s">&quot;http://www.weather.com.cn&quot;</span><span class="p">,</span> <span class="n">item</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">contents</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="s">&quot;src&quot;</span><span class="p">]])</span>
</span><span class='line'>    <span class="n">tmp_dict</span><span class="p">[</span><span class="s">&quot;weather&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="n">item</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">.</span><span class="n">string</span>
</span><span class='line'>    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">item</span><span class="p">)</span> <span class="o">==</span> <span class="mi">6</span><span class="p">:</span>
</span><span class='line'><span class="c">#中国天气网的数据在6点以后就没有白天的数据了，所以这里判断了一下。</span>
</span><span class='line'>        <span class="n">tmp_dict</span><span class="p">[</span><span class="s">&quot;low&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="s">&#39; &#39;</span><span class="o">.</span><span class="n">join</span><span class="p">([</span><span class="s">u&quot;夜间&quot;</span><span class="p">,</span> <span class="n">item</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">.</span><span class="n">contents</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">contents</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">item</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">.</span><span class="n">contents</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">contents</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">string</span><span class="p">])</span>
</span><span class='line'>    <span class="k">else</span><span class="p">:</span>
</span><span class='line'>        <span class="n">tmp_dict</span><span class="p">[</span><span class="s">&quot;high&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="s">&#39; &#39;</span><span class="o">.</span><span class="n">join</span><span class="p">([</span><span class="s">u&quot;白天&quot;</span><span class="p">,</span> <span class="n">item</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">.</span><span class="n">contents</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">contents</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">item</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">.</span><span class="n">contents</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">contents</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">string</span><span class="p">])</span>
</span><span class='line'>        <span class="n">tmp_dict</span><span class="p">[</span><span class="s">&quot;low&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="s">&#39; &#39;</span><span class="o">.</span><span class="n">join</span><span class="p">([</span><span class="s">u&quot;夜间&quot;</span><span class="p">,</span> <span class="n">item</span><span class="p">[</span><span class="mi">8</span><span class="p">]</span><span class="o">.</span><span class="n">contents</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">contents</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">item</span><span class="p">[</span><span class="mi">8</span><span class="p">]</span><span class="o">.</span><span class="n">contents</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">contents</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">string</span><span class="p">])</span>
</span><span class='line'>    <span class="n">result</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">tmp_dict</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>最后为大家提供一个我吐血整理的城市名称和城市编号的对应关系，请<a href="http://a2bgeekblog.qiniudn.com/file/py/data.py">点击</a>下载。</p>

<blockquote><p>好了今天就到这里，欢迎拍砖。</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[搭建nginx+tornado+supervisor+mongodb环境]]></title>
    <link href="http://a2bgeek.me/blog/2014/03/27/da-jian-nginx-plus-tornado-plus-supervisorhuan-jing.html/"/>
    <updated>2014-03-27T09:52:34+08:00</updated>
    <id>http://a2bgeek.me/blog/2014/03/27/da-jian-nginx-plus-tornado-plus-supervisorhuan-jing</id>
    <content type="html"><![CDATA[<p>最近做一个项目需要用到传说中的<code>云计算</code>，云计算是什么？打个比方，回到电气时代，以前是自家买爱迪生的直流发电机给自家发电，后来有了交流电，变成了发电厂发电然后供电给各家，这个发电厂其实就是电气时代的云平台，有了这个云平台，就降低了各家的用电成本，能让越来越多的人用上电。</p>

<p>作为一个程序员，大家一定听说过百度的bae，新浪的sae，谷歌的gae，这些其实就是云计算的一种表现形式。某大公司有一大堆服务器，怎么开放给小公司或者个人使用呢？首先要把基本的开发环境搭建好，然后弄一套自家的开发框架出来，开发者只需要用git把本地的代码push上去就可以，这就是所谓的<code>应用引擎</code>。云计算还有一种表现形式就是像阿里云服务器、谷歌的compute engine这种，直接给你一台Linux服务器。我个人还是比较偏向第二种，用起来比较自由。</p>

<p>今天来介绍一下在一台装了centos的服务器上搭建python web环境。</p>

<h2>安装nginx服务器，它负责为tornado做负载均衡</h2>

<ul>
<li>在命令行执行如下命令：</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vim /etc/yum.repos.d/nginx.repo
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>填写如下文本内容：</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>nginx<span class="o">]</span>
</span><span class='line'><span class="nv">name</span><span class="o">=</span>nginx repo
</span><span class='line'><span class="nv">baseurl</span><span class="o">=</span>http://nginx.org/packages/centos/<span class="nv">$releasever</span>/<span class="nv">$basearch</span>/
</span><span class='line'><span class="nv">gpgcheck</span><span class="o">=</span>0
</span><span class='line'><span class="nv">enabled</span><span class="o">=</span>1
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>在命令行执行yum命令安装nginx：</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>yum install nginx
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>配置防火墙，允许80端口：</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>iptables -I INPUT -p tcp --dport 80 -j ACCEPT
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>启动nginx：</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/etc/init.d/nginx start
</span></code></pre></td></tr></table></div></figure>


<h2>安装setuptools</h2>

<ul>
<li>在命令行执行如下命令：</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>wget https://bitbucket.org/pypa/setuptools/raw/bootstrap/ez_setup.py -O - | python
</span></code></pre></td></tr></table></div></figure>


<h2>安装tornado</h2>

<ul>
<li>首先安装pip，在命令行执行如下命令：</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo yum install python-pip
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>然后安装tornado，在命令行执行如下命令：</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo pip install tornado
</span></code></pre></td></tr></table></div></figure>


<h2>安装supervisor</h2>

<ul>
<li>在命令行执行如下命令：</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo pip install supervisor
</span></code></pre></td></tr></table></div></figure>


<h2>安装mongodb</h2>

<ul>
<li>在<a href="http://downloads-distro.mongodb.org/repo/redhat/os/x86_64/RPMS/">mongodb官方站点</a>下载mongo-10gen-server-2.4.9-mongodb_1.x86_64.rpm和mongo-10gen-2.4.9-mongodb_1.x86_64.rpm，然后使用sudo rpm -ivh安装即可。</li>
</ul>


<h2>安装pymongo</h2>

<p>当然也可以选择mongoengine。
&ndash; 在命令行执行如下命令：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo pip install pymongo
</span></code></pre></td></tr></table></div></figure>


<h2>生产环境的配置</h2>

<ul>
<li>首先是nginx的配置，nginx在这里主要的作用是做负载均衡，把请求分配给多个tornado进程。nginx的配置文件如下：</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>http <span class="o">{</span>
</span><span class='line'>    charset utf-8;
</span><span class='line'>    include       /etc/nginx/mime.types;
</span><span class='line'>    default_type  application/octet-stream;
</span><span class='line'>    log_format  main  <span class="s1">&#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;</span>
</span><span class='line'>                      <span class="s1">&#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;</span>
</span><span class='line'>                      <span class="s1">&#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;</span>;
</span><span class='line'>    access_log  /var/log/nginx/access.log  main;
</span><span class='line'>    keepalive_timeout  65;
</span><span class='line'>    proxy_read_timeout 200;
</span><span class='line'>    sendfile on;
</span><span class='line'>    tcp_nopush on;
</span><span class='line'>    tcp_nodelay on;
</span><span class='line'>    gzip on;
</span><span class='line'>    gzip_min_length 1000;
</span><span class='line'>    gzip_proxied any;
</span><span class='line'>    gzip_types text/plain text/css text/xml
</span><span class='line'>               application/x-javascript application/xml
</span><span class='line'>               application/atom+xml text/javascript;
</span><span class='line'>    proxy_next_upstream error;
</span><span class='line'>    upstream a2bgeektest <span class="o">{</span>
</span><span class='line'>        server 127.0.0.1:8001;
</span><span class='line'>        server 127.0.0.0:8002;
</span><span class='line'>        server 127.0.0.1:8003;
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    server <span class="o">{</span>
</span><span class='line'>        listen       80;
</span><span class='line'>        client_max_body_size 50M;
</span><span class='line'>        location ^~ /static/ <span class="o">{</span>
</span><span class='line'>            root /srv/http/static;
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="nv">$query_string</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                expires max;
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        location / <span class="o">{</span>
</span><span class='line'>            proxy_pass_header Server;
</span><span class='line'>            proxy_set_header Host <span class="nv">$http_host</span>;
</span><span class='line'>            proxy_redirect off;
</span><span class='line'>            proxy_set_header X-Real-IP <span class="nv">$remote_addr</span>;
</span><span class='line'>            proxy_set_header X-Scheme <span class="nv">$scheme</span>;
</span><span class='line'>            proxy_pass http://a2bgeektest;
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>接下来使用supervisor启动并管理tornado进程
在命令行使用vim新建并编辑一个配置文件/etc/supervisor/conf.d/test.conf，内容如下：</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>program:a2bgeektest<span class="o">]</span>
</span><span class='line'><span class="nb">command</span> <span class="o">=</span> python /srv/http/a2bgeektest/tornadoapp.py --port<span class="o">=</span>80%<span class="o">(</span>process_num<span class="o">)</span>02d ;
</span><span class='line'><span class="nv">autorestart</span> <span class="o">=</span> <span class="nb">true</span>
</span><span class='line'><span class="nv">autostart</span> <span class="o">=</span> <span class="nb">true</span>
</span><span class='line'><span class="nv">numprocs</span> <span class="o">=</span> 3
</span><span class='line'><span class="nv">process_name</span> <span class="o">=</span> %<span class="o">(</span>program_name<span class="o">)</span>s-%<span class="o">(</span>process_num<span class="o">)</span>02d
</span><span class='line'><span class="nv">stdout_logfile</span> <span class="o">=</span> /var/log/a2bgeektest/tornadoapptest.log
</span><span class='line'><span class="nv">redirect_stderr</span> <span class="o">=</span> <span class="nb">true</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后在命令行下执行：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo supervisord -c /etc/supervisor/supervisord.conf
</span><span class='line'>sudo supervisorctl reload
</span><span class='line'>sudo supervisorctl start all
</span></code></pre></td></tr></table></div></figure>


<p>就可以启动3个同样的tornado进程。</p>

<blockquote><p>好了，今天就到这里，欢迎拍砖。</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于打DOTA]]></title>
    <link href="http://a2bgeek.me/blog/2014/03/13/guan-yu-da-dota.html/"/>
    <updated>2014-03-13T20:51:22+08:00</updated>
    <id>http://a2bgeek.me/blog/2014/03/13/guan-yu-da-dota</id>
    <content type="html"><![CDATA[<p>有人说过这样一句话：</p>

<blockquote><p>打好DOTA需要时间，即使花了时间也不一定玩得好，就算玩得好也没什么用。
—— Cherish</p></blockquote>

<p>的确是这样的，而且我还想补充，坐着玩的时间太长会损害人体健康。嗯嗯，偶尔玩玩，不要让DOTA霸占了生活，DOTA只是生活的辅料而已。</p>

<p>渐渐地，无聊的时候应该多想想，想想自己的过往，想想自己的不足，想想自己的未来。
<img src="http://a2bgeekblog.qiniudn.com/image/png/thinking.jpg" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[消息队列RabbitMQ分享]]></title>
    <link href="http://a2bgeek.me/blog/2014/03/13/xiao-xi-dui-lie-rabbitmqfen-xiang.html/"/>
    <updated>2014-03-13T18:52:31+08:00</updated>
    <id>http://a2bgeek.me/blog/2014/03/13/xiao-xi-dui-lie-rabbitmqfen-xiang</id>
    <content type="html"><![CDATA[<p>最近为我维护的微信公众号添加功能，添加之后发现返回速度变慢了，导致在5秒内无法给用户返回消息。遇到这种情况该怎么办呢？答案是把耗时的操作开线程做异步处理，不过大神给了我指点，没错，就是使用消息队列。</p>

<p>消息队列顾名思义是一个队列，先进先出，可以把需要异步处理的消息（常常表现为字符串）先存到里面慢慢处理。</p>

<p>我选用的消息队列是RabbitMQ，可以点击<a href="https://www.rabbitmq.com">RabbitMQ官方网站</a>查看文档。RabbitMQ是C/S结构，就像MySQL一样，提供了很多编程语言的客户端，因为我用的是python，所以使用了pika这个包。</p>

<p>RabbitMQ使用的一般情形就是有几个receiver一直在监听消息队列，然后来自WEB服务器的需要先返回后处理数据的请求被不断地放入消息队列，reveiver们轮流去处理，如下图：<img src="https://www.rabbitmq.com/img/tutorials/python-two.png" alt="" /></p>

<p>下面上代码：</p>

<p>send.py</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">pika</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'>
</span><span class='line'><span class="n">connection</span> <span class="o">=</span> <span class="n">pika</span><span class="o">.</span><span class="n">BlockingConnection</span><span class="p">(</span><span class="n">pika</span><span class="o">.</span><span class="n">ConnectionParameters</span><span class="p">(</span>
</span><span class='line'>  <span class="n">host</span><span class="o">=</span><span class="s">&#39;localhost&#39;</span><span class="p">))</span>
</span><span class='line'><span class="n">channel</span> <span class="o">=</span> <span class="n">connection</span><span class="o">.</span><span class="n">channel</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="n">channel</span><span class="o">.</span><span class="n">queue_declare</span><span class="p">(</span><span class="n">queue</span><span class="o">=</span><span class="s">&#39;task_queue&#39;</span><span class="p">,</span> <span class="n">durable</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">message</span> <span class="o">=</span> <span class="s">&#39; &#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">:])</span> <span class="ow">or</span> <span class="s">&quot;Hello World!&quot;</span>
</span><span class='line'><span class="n">channel</span><span class="o">.</span><span class="n">basic_publish</span><span class="p">(</span><span class="n">exchange</span><span class="o">=</span><span class="s">&#39;&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="n">routing_key</span><span class="o">=</span><span class="s">&#39;task_queue&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="n">body</span><span class="o">=</span><span class="n">message</span><span class="p">,</span>
</span><span class='line'>            <span class="n">properties</span><span class="o">=</span><span class="n">pika</span><span class="o">.</span><span class="n">BasicProperties</span><span class="p">(</span>
</span><span class='line'>           <span class="n">delivery_mode</span> <span class="o">=</span> <span class="mi">2</span><span class="p">,</span> <span class="c"># make message persistent</span>
</span><span class='line'>            <span class="p">))</span>
</span><span class='line'><span class="k">print</span> <span class="s">&quot; [x] Sent </span><span class="si">%r</span><span class="s">&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">message</span><span class="p">,)</span>
</span><span class='line'><span class="n">connection</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>receiver.py</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">pika</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">time</span>
</span><span class='line'>
</span><span class='line'><span class="n">connection</span> <span class="o">=</span> <span class="n">pika</span><span class="o">.</span><span class="n">BlockingConnection</span><span class="p">(</span><span class="n">pika</span><span class="o">.</span><span class="n">ConnectionParameters</span><span class="p">(</span>
</span><span class='line'>  <span class="n">host</span><span class="o">=</span><span class="s">&#39;localhost&#39;</span><span class="p">))</span>
</span><span class='line'><span class="n">channel</span> <span class="o">=</span> <span class="n">connection</span><span class="o">.</span><span class="n">channel</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="n">channel</span><span class="o">.</span><span class="n">queue_declare</span><span class="p">(</span><span class="n">queue</span><span class="o">=</span><span class="s">&#39;task_queue&#39;</span><span class="p">,</span> <span class="n">durable</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span> <span class="s">&#39; [*] Waiting for messages. To exit press CTRL+C&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">callback</span><span class="p">(</span><span class="n">ch</span><span class="p">,</span> <span class="n">method</span><span class="p">,</span> <span class="n">properties</span><span class="p">,</span> <span class="n">body</span><span class="p">):</span>
</span><span class='line'>    <span class="k">print</span> <span class="s">&quot; [x] Received </span><span class="si">%r</span><span class="s">&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">body</span><span class="p">,)</span>
</span><span class='line'>    <span class="n">time</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span> <span class="n">body</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="s">&#39;.&#39;</span><span class="p">)</span> <span class="p">)</span>
</span><span class='line'>    <span class="k">print</span> <span class="s">&quot; [x] Done&quot;</span>
</span><span class='line'>    <span class="n">ch</span><span class="o">.</span><span class="n">basic_ack</span><span class="p">(</span><span class="n">delivery_tag</span> <span class="o">=</span> <span class="n">method</span><span class="o">.</span><span class="n">delivery_tag</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">channel</span><span class="o">.</span><span class="n">basic_qos</span><span class="p">(</span><span class="n">prefetch_count</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="n">channel</span><span class="o">.</span><span class="n">basic_consume</span><span class="p">(</span><span class="n">callback</span><span class="p">,</span>
</span><span class='line'>            <span class="n">queue</span><span class="o">=</span><span class="s">&#39;task_queue&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">channel</span><span class="o">.</span><span class="n">start_consuming</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>我就是参考这段代码去优化我的异步处理的。</p>

<blockquote><p>好了，今天就到这里，欢迎拍砖。</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[新的开始]]></title>
    <link href="http://a2bgeek.me/blog/2014/03/07/xin-de-kai-shi.html/"/>
    <updated>2014-03-07T11:19:51+08:00</updated>
    <id>http://a2bgeek.me/blog/2014/03/07/xin-de-kai-shi</id>
    <content type="html"><![CDATA[<p><img src="http://a2bgeekblog.qiniudn.com/image/png/newstart01.jpg" alt="" />
<img src="http://a2bgeekblog.qiniudn.com/image/png/newstart02.jpg" alt="" /></p>

<blockquote><p>路很长，唯一能做的就是继续走下去。A2B，Step By Step。</p></blockquote>
]]></content>
  </entry>
  
</feed>
