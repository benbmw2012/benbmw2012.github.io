<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: python web | A2BGeek's Blog]]></title>
  <link href="http://a2bgeek.me/blog/categories/python-web/atom.xml" rel="self"/>
  <link href="http://a2bgeek.me/"/>
  <updated>2014-08-15T20:37:45+08:00</updated>
  <id>http://a2bgeek.me/</id>
  <author>
    <name><![CDATA[A2BGeek]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[搭建nginx+tornado+supervisor+mongodb环境]]></title>
    <link href="http://a2bgeek.me/blog/2014/03/27/da-jian-nginx-plus-tornado-plus-supervisorhuan-jing.html/"/>
    <updated>2014-03-27T09:52:34+08:00</updated>
    <id>http://a2bgeek.me/blog/2014/03/27/da-jian-nginx-plus-tornado-plus-supervisorhuan-jing</id>
    <content type="html"><![CDATA[<p>最近做一个项目需要用到传说中的<code>云计算</code>，云计算是什么？打个比方，回到电气时代，以前是自家买爱迪生的直流发电机给自家发电，后来有了交流电，变成了发电厂发电然后供电给各家，这个发电厂其实就是电气时代的云平台，有了这个云平台，就降低了各家的用电成本，能让越来越多的人用上电。</p>

<p>作为一个程序员，大家一定听说过百度的bae，新浪的sae，谷歌的gae，这些其实就是云计算的一种表现形式。某大公司有一大堆服务器，怎么开放给小公司或者个人使用呢？首先要把基本的开发环境搭建好，然后弄一套自家的开发框架出来，开发者只需要用git把本地的代码push上去就可以，这就是所谓的<code>应用引擎</code>。云计算还有一种表现形式就是像阿里云服务器、谷歌的compute engine这种，直接给你一台Linux服务器。我个人还是比较偏向第二种，用起来比较自由。</p>

<p>今天来介绍一下在一台装了centos的服务器上搭建python web环境。</p>

<h2>安装nginx服务器，它负责为tornado做负载均衡</h2>

<ul>
<li>在命令行执行如下命令：
<code>bash
vim /etc/yum.repos.d/nginx.repo
</code></li>
<li>填写如下文本内容：
<code>bash
[nginx]
name=nginx repo
baseurl=http://nginx.org/packages/centos/$releasever/$basearch/
gpgcheck=0
enabled=1
</code></li>
<li>在命令行执行yum命令安装nginx：
<code>bash
yum install nginx
</code></li>
<li>配置防火墙，允许80端口：
<code>bash
iptables -I INPUT -p tcp --dport 80 -j ACCEPT
</code></li>
<li>启动nginx：
<code>bash
/etc/init.d/nginx start
</code>

<h2>安装setuptools</h2></li>
<li>在命令行执行如下命令：
<code>bash
wget https://bitbucket.org/pypa/setuptools/raw/bootstrap/ez_setup.py -O - | python
</code>

<h2>安装tornado</h2></li>
<li>首先安装pip，在命令行执行如下命令：
<code>bash
sudo yum install python-pip
</code></li>
<li>然后安装tornado，在命令行执行如下命令：
<code>bash
sudo pip install tornado
</code>

<h2>安装supervisor</h2></li>
<li>在命令行执行如下命令：
<code>bash
sudo pip install supervisor
</code>

<h2>安装mongodb</h2></li>
<li>在<a href="http://downloads-distro.mongodb.org/repo/redhat/os/x86_64/RPMS/">mongodb官方站点</a>下载mongo-10gen-server-2.4.9-mongodb_1.x86_64.rpm和mongo-10gen-2.4.9-mongodb_1.x86_64.rpm，然后使用sudo rpm -ivh安装即可。</li>
</ul>


<h2>安装pymongo</h2>

<p>当然也可以选择mongoengine。
&ndash; 在命令行执行如下命令：
<code>bash
sudo pip install pymongo
</code></p>

<h2>生产环境的配置</h2>

<ul>
<li>首先是nginx的配置，nginx在这里主要的作用是做负载均衡，把请求分配给多个tornado进程。nginx的配置文件如下：
<code>bash
http {
  charset utf-8;
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log  /var/log/nginx/access.log  main;
  keepalive_timeout  65;
  proxy_read_timeout 200;
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  gzip on;
  gzip_min_length 1000;
  gzip_proxied any;
  gzip_types text/plain text/css text/xml
             application/x-javascript application/xml
             application/atom+xml text/javascript;
  proxy_next_upstream error;
  upstream a2bgeektest {
      server 127.0.0.1:8001;
      server 127.0.0.0:8002;
      server 127.0.0.1:8003;
  }
  server {
      listen       80;
      client_max_body_size 50M;
      location ^~ /static/ {
          root /srv/http/static;
          if ($query_string) {
              expires max;
          }
      }
      location / {
          proxy_pass_header Server;
          proxy_set_header Host $http_host;
          proxy_redirect off;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Scheme $scheme;
          proxy_pass http://a2bgeektest;
      }
  }
}
</code></li>
<li>接下来使用supervisor启动并管理tornado进程
在命令行使用vim新建并编辑一个配置文件/etc/supervisor/conf.d/test.conf，内容如下：
<code>bash
[program:a2bgeektest]
command = python /srv/http/a2bgeektest/tornadoapp.py --port=80%(process_num)02d ;
autorestart = true
autostart = true
numprocs = 3
process_name = %(program_name)s-%(process_num)02d
stdout_logfile = /var/log/a2bgeektest/tornadoapptest.log
redirect_stderr = true
</code>
然后在命令行下执行：
<code>bash
sudo supervisord -c /etc/supervisor/supervisord.conf
sudo supervisorctl reload
sudo supervisorctl start all
</code>
就可以启动3个同样的tornado进程。

<blockquote><p>好了，今天就到这里，欢迎拍砖。</p></blockquote></li>
</ul>

]]></content>
  </entry>
  
</feed>
