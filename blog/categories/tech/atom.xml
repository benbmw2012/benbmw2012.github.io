<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tech | A2BGeek's Blog]]></title>
  <link href="http://a2bgeek.me/blog/categories/tech/atom.xml" rel="self"/>
  <link href="http://a2bgeek.me/"/>
  <updated>2014-08-15T20:37:45+08:00</updated>
  <id>http://a2bgeek.me/</id>
  <author>
    <name><![CDATA[A2BGeek]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[别摸我APP简介]]></title>
    <link href="http://a2bgeek.me/blog/2014/08/15/bie-mo-wo-appjian-jie.html/"/>
    <updated>2014-08-15T11:34:04+08:00</updated>
    <id>http://a2bgeek.me/blog/2014/08/15/bie-mo-wo-appjian-jie</id>
    <content type="html"><![CDATA[<p>在此介绍一下我开发的一款android app，名叫“Don&rsquo;t Touch Me”，这是一款安全类的应用，包括的功能有“贴身防盗”、“远程追踪”、“超级程序锁”、“私人记事本”。</p>

<h2>初始界面和设置</h2>

<p>app第一次执行，必须输入密码，这个密码用于开启上述四个功能，以及解除报警、解除锁定。</br>
<img src="http://a2bgeekblog.qiniudn.com/image/png/dttm01.png" width="320" height="480"/>
<img src="http://a2bgeekblog.qiniudn.com/image/png/dttm02.png" width="320" height="480"/>
<img src="http://a2bgeekblog.qiniudn.com/image/png/dttm03.png" width="320" height="480"/>
<img src="http://a2bgeekblog.qiniudn.com/image/png/dttm04.png" width="320" height="480"/></p>

<h2>导航设计</h2>

<p>界面中部为用户放置一本使用手册</br>
<img src="http://a2bgeekblog.qiniudn.com/image/png/dttm05.png" width="320" height="480"/>
<img src="http://a2bgeekblog.qiniudn.com/image/png/dttm06.png" width="320" height="480"/>
<img src="http://a2bgeekblog.qiniudn.com/image/png/dttm07.png" width="320" height="480"/>
<img src="http://a2bgeekblog.qiniudn.com/image/png/dttm08.png" width="320" height="480"/></p>

<h2>贴身防盗</h2>

<p>只要条件满足就会出发报警，想要停止报警必须机主输入第一次设置的密码</br>
<img src="http://a2bgeekblog.qiniudn.com/image/png/dttm09.png" width="320" height="480"/>
<img src="http://a2bgeekblog.qiniudn.com/image/png/dttm10.png" width="320" height="480"/></p>

<h2>远程追踪</h2>

<p>三步走：设置安全手机（最好是经常和自己在一起的人）、备份短信指令到安全手机、开启。如果手机不慎丢失，机主可用安全手机发送短信指令，包括定位指令（本机回复一条带url的短信给安全手机，url对应一个地图页面）和报警指令，尽量找回丢失的手机</br>
<img src="http://a2bgeekblog.qiniudn.com/image/png/dttm11.png" width="320" height="480"/></p>

<h2>超级程序锁</h2>

<p>某app被锁定后，只有机主（知道密码的人）才能使用该app</br>
<img src="http://a2bgeekblog.qiniudn.com/image/png/dttm12.png" width="320" height="480"/>
<img src="http://a2bgeekblog.qiniudn.com/image/png/dttm13.png" width="320" height="480"/></p>

<h2>私人记事本</h2>

<p>机主可以记录的自己隐私哦，记录一些日常事物也不错</br>
<img src="http://a2bgeekblog.qiniudn.com/image/png/dttm14.png" width="320" height="480"/>
<img src="http://a2bgeekblog.qiniudn.com/image/png/dttm15.png" width="320" height="480"/>
<img src="http://a2bgeekblog.qiniudn.com/image/png/dttm16.png" width="320" height="480"/></p>

<h2>设置与关于</h2>

<p><img src="http://a2bgeekblog.qiniudn.com/image/png/dttm17.png" width="320" height="480"/>
<img src="http://a2bgeekblog.qiniudn.com/image/png/dttm18.png" width="320" height="480"/></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[盖世字帖APP简介]]></title>
    <link href="http://a2bgeek.me/blog/2014/08/15/gai-shi-zi-tie-appjian-jie.html/"/>
    <updated>2014-08-15T10:26:17+08:00</updated>
    <id>http://a2bgeek.me/blog/2014/08/15/gai-shi-zi-tie-appjian-jie</id>
    <content type="html"><![CDATA[<p>在此介绍一下我开发的一款android app，名叫“盖世字帖”，是专门为三星galaxy note定制的app，利用手写笔，试图带来全新的练字体验。</p>

<h2>中国风设计</h2>

<p><img src="http://a2bgeekblog.qiniudn.com/image/png/gszt/01.png" width="480" height="320"/>
<img src="http://a2bgeekblog.qiniudn.com/image/png/gszt/02.png" width="480" height="320"/>
<img src="http://a2bgeekblog.qiniudn.com/image/png/gszt/03.png" width="480" height="320"/></p>

<h2>分为初级练习和高级练习</h2>

<p><img src="http://a2bgeekblog.qiniudn.com/image/png/gszt/04.png" width="480" height="320"/></p>

<h2>初级练习导航</h2>

<p>选取最常用的40个字</br>
<img src="http://a2bgeekblog.qiniudn.com/image/png/gszt/05.png" width="480" height="320"/>
<img src="http://a2bgeekblog.qiniudn.com/image/png/gszt/06.png" width="480" height="320"/></p>

<h2>初级练习界面</h2>

<p><img src="http://a2bgeekblog.qiniudn.com/image/png/gszt/07.png" width="480" height="320"/>
<img src="http://a2bgeekblog.qiniudn.com/image/png/gszt/08.png" width="480" height="320"/></br>
最下角放置撤销、恢复、删除功能</br>
<img src="http://a2bgeekblog.qiniudn.com/image/png/gszt/09.png" width="480" height="320"/></br>
为常用的40个字精心制作笔画页，帮助培养正确的书写顺序</br>
<img src="http://a2bgeekblog.qiniudn.com/image/png/gszt/10.png" width="480" height="320"/>
<img src="http://a2bgeekblog.qiniudn.com/image/png/gszt/11.png" width="480" height="320"/></p>

<h2>高级练习导航</h2>

<p>可以输入想练习的字或者点击随机推荐的字</br>
<img src="http://a2bgeekblog.qiniudn.com/image/png/gszt/12.png" width="480" height="320"/></p>

<h2>高级练习界面</h2>

<p><img src="http://a2bgeekblog.qiniudn.com/image/png/gszt/13.png" width="480" height="320"/></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[快递100API使用讲解]]></title>
    <link href="http://a2bgeek.me/blog/2014/04/14/kuai-di-100apishi-yong-jiang-jie.html/"/>
    <updated>2014-04-14T09:24:28+08:00</updated>
    <id>http://a2bgeek.me/blog/2014/04/14/kuai-di-100apishi-yong-jiang-jie</id>
    <content type="html"><![CDATA[<p>今天主要讲解的是如何通过api.kuaidi100.com获得物流单号的跟踪信息。</p>

<p>其实说来很简单，就是通过向指定的地址发送请求，即可返回如JSON、XML等格式的跟综结果。</p>

<h2>应用场景</h2>

<pre><code>1. 电商网站用户打开“我的订单”时调用此API显示结果
2. 物流系统对帐前调用此API查一次所有运单的签收状态
</code></pre>

<h2>是否需要授权</h2>

<p>是，需要到<a href="http://www.kuaidi100.com/openapi/applyapi.shtml">快递查询API申请地址</a>申请。</p>

<h2>API请求地址</h2>

<p><a href="http://api.kuaidi100.com/api?id=">http://api.kuaidi100.com/api?id=</a>[]&amp;com=[]&amp;nu=[]&amp;valicode=[]&amp;show=[0|1|2|3]&amp;muti=[0|1]&amp;order=[desc|asc]</p>

<h2>参数说明</h2>

<table class="tab_use_child" cellspacing="0">
    <tbody>
        <tr>
            <th width="90" scope="col">名称</th>
            <th width="90" scope="col">类型</th>
            <th width="100" scope="col">是否必需</th>
            <th style="text-align:left;" scope="col"> 　　描述</th>
        </tr>
        <tr style="background-color: rgb(255, 255, 255);">
            <td>id</td>
            <td> String</td>
            <td>是</td>
            <td style="text-align:left;">
            身份授权key，请
            <a target="_blank" href="http://a2bgeek.me/openapi/applyapi.shtml">快递查询接口</a>
            进行申请（大小写敏感）
            </td>
        </tr>
        <tr style="background-color: rgb(255, 255, 255);">
            <td>com</td>
            <td>String</td>
            <td>是</td>
            <td style="text-align:left;">
            要查询的快递公司代码，不支持中文，对应的公司代码见
            <br>
            《
            <a class="aco" target="_blank" href="http://code.google.com/p/kuaidi-api/wiki/Open_API_API_URL">API URL 所支持的快递公司及参数说明</a>
            》和《
            <a class="aco" target="_blank" href="http://code.google.com/p/kuaidi-api/wiki/Open_API_For_International_Express">支持的国际类快递及参数说明</a>
            》。
            <br>
            如果找不到您所需的公司，请发邮件至
            <a class="aco" href="mailto:kuaidi@kingdee.com"> kuaidi@kingdee.com </a>
            咨询（大小写不敏感）
            </td>
        </tr>
        <tr style="background-color: rgb(255, 255, 255);">
            <td>nu</td>
            <td> String</td>
            <td>是</td>
            <td style="text-align:left;">要查询的快递单号，请勿带特殊符号，不支持中文（大小写不敏感）</td>
        </tr>
        <tr style="background-color: rgb(255, 255, 255);">
            <td>valicode</td>
            <td>String</td>
            <td>是</td>
            <td style="text-align:left;">已弃用字段，无意义，请忽略。</td>
        </tr>
        <tr style="background-color: rgb(255, 255, 255);">
            <td>show</td>
            <td> String</td>
            <td>是</td>
            <td style="text-align:left;">
            返回类型：
            <br>
            0：返回json字符串，
            <br>
            1：返回xml对象，
            <br>
            2：返回html对象，
            <br>
            3：返回text文本。
            <br>
            如果不填，默认返回json字符串。
            </td>
        </tr>
        <tr style="background-color: rgb(255, 255, 255);">
            <td>muti</td>
            <td> String</td>
            <td>是</td>
            <td style="text-align:left;">
            返回信息数量：
            <br>
            1:返回多行完整的信息，
            <br>
            0:只返回一行信息。
            <br>
            不填默认返回多行。
            <br>
            </td>
        </tr>
        <tr style="background-color: rgb(255, 255, 255);">
            <td>order</td>
            <td> String</td>
            <td>是</td>
            <td style="text-align:left;">
            排序：
            <br>
            desc：按时间由新到旧排列，
            <br>
            asc：按时间由旧到新排列。
            <br>
            不填默认返回倒序（大小写不敏感）
            </td>
        </tr>
    </tbody>
</table>


<h2>返回结果</h2>

<table class="tab_use_child" cellspacing="0">
    <tbody>
        <tr style="background-color: rgb(255, 255, 255);">
            <th width="260" scope="col">字段名称</th>
            <th style="text-align:left;" scope="col">　　字段含义</th>
        </tr>
        <tr>
            <td>com</td>
            <td style="text-align:left;">物流公司编号</td>
        </tr>
        <tr style="background-color: rgb(255, 255, 255);">
            <td>nu</td>
            <td style="text-align:left;">物流单号</td>
        </tr>
        <tr style="background-color: rgb(255, 255, 255);">
            <td>time</td>
            <td style="text-align:left;">每条跟踪信息的时间</td>
        </tr>
        <tr style="background-color: rgb(255, 255, 255);">
            <td>context</td>
            <td style="text-align:left;">每条跟综信息的描述</td>
        </tr>
        <tr style="background-color: rgb(255, 255, 255);">
            <td>state</td>
            <td style="text-align:left;">
            快递单当前的状态 ：　
            <br>
            0：在途，即货物处于运输过程中；
            <br>
            1：揽件，货物已由快递公司揽收并且产生了第一条跟踪信息；
            <br>
            2：疑难，货物寄送过程出了问题；
            <br>
            3：签收，收件人已签收；
            <br>
            4：退签，即货物由于用户拒签、超区等原因退回，而且发件人已经签收；
            <br>
            5：派件，即快递正在进行同城派件；
            <br>
            6：退回，货物正处于退回发件人的途中；
            <br>
            该状态还在不断完善中，若您有更多的参数需求，欢迎发邮件至
            <a class="aco ff" href="mailto:kuaidi@kingdee.com"> kuaidi@kingdee.com</a>
            提出。
            </td>
        </tr>
        <tr style="background-color: rgb(255, 255, 255);">
            <td>status</td>
            <td style="text-align:left;">
            查询结果状态：
            <br>
            0：物流单暂无结果，
            <br>
            1：查询成功，
            <br>
            2：接口出现异常，
            </td>
        </tr>
        <tr style="background-color: rgb(255, 255, 255);">
            <td>message</td>
            <td style="text-align:left;">无意义，请忽略</td>
        </tr>
        <tr style="background-color: rgb(255, 255, 255);">
            <td>condition</td>
            <td style="text-align:left;">无意义，请忽略</td>
        </tr>
        <tr style="background-color: rgb(255, 255, 255);">
            <td>ischeck</td>
            <td style="text-align:left;">无意义，请忽略</td>
        </tr>
    </tbody>
</table>


<h2>返回示例</h2>

<h3>xml格式</h3>

<p><code>xml
&lt;xml&gt;
&lt;message&gt;ok&lt;/message&gt;
&lt;nu&gt;1200722815552&lt;/nu&gt;
&lt;ischeck&gt;1&lt;/ischeck&gt;
&lt;com&gt;yunda&lt;/com&gt;
&lt;status&gt;1&lt;/status&gt;
&lt;condition&gt;F00&lt;/condition&gt;
&lt;data&gt;
&lt;time&gt;2013-03-03 19:24:48&lt;/time&gt;
&lt;context&gt;江苏泗阳县公司:进行揽件扫描&lt;/context&gt;
&lt;/data&gt;
&lt;data&gt;
&lt;time&gt;2013-03-03 19:25:10&lt;/time&gt;
&lt;context&gt;江苏泗阳县公司:进行发出扫描，将发往：江苏淮安中转站&lt;/context&gt;
&lt;/data&gt;
&lt;data&gt;
&lt;time&gt;2013-03-03 21:44:47&lt;/time&gt;
&lt;context&gt;江苏淮安中转站:快件进入分拨中心进行分拨&lt;/context&gt;
&lt;/data&gt;
&lt;data&gt;
&lt;time&gt;2013-03-04 03:22:44&lt;/time&gt;
&lt;context&gt;江苏南京中转站:从站点发出，本次转运目的地：江苏南京栖霞区仙林公司&lt;/context&gt;
&lt;/data&gt;
&lt;data&gt;
&lt;time&gt;2013-03-04 08:25:03&lt;/time&gt;
&lt;context&gt;江苏南京栖霞区仙林公司:到达目的地网点，快件将很快进行派送&lt;/context&gt;
&lt;/data&gt;
&lt;data&gt;
&lt;time&gt;2013-03-04 13:09:58&lt;/time&gt;
&lt;context&gt;江苏南京栖霞区仙林公司:进行派件扫描；派送业务员：孙；（&lt;/context&gt;
&lt;/data&gt;
&lt;data&gt;
&lt;time&gt;2013-03-04 13:19:47&lt;/time&gt;
&lt;context&gt;江苏南京栖霞区仙林公司:快件已被 图片 签收&lt;/context&gt;
&lt;/data&gt;
&lt;state&gt;3&lt;/state&gt;
&lt;/xml&gt;
</code></p>

<h3>json格式</h3>

<p>``` json
{&ldquo;message&rdquo;:&ldquo;ok&rdquo;,&ldquo;status&rdquo;:&ldquo;1&rdquo;,&ldquo;state&rdquo;:&ldquo;3&rdquo;,&ldquo;data&rdquo;:</p>

<pre><code>[{"time":"2012-07-07 13:35:14","context":"客户已签收"},
    {"time":"2012-07-07 09:10:10","context":"离开 [北京石景山营业厅] 派送中，递送员[温]，电话[]"},
    {"time":"2012-07-06 19:46:38","context":"到达 [北京石景山营业厅]"},
    {"time":"2012-07-06 15:22:32","context":"离开 [北京石景山营业厅] 派送中，递送员[温]，电话[]"},
    {"time":"2012-07-06 15:05:00","context":"到达 [北京石景山营业厅]"},
    {"time":"2012-07-06 13:37:52","context":"离开 [北京_同城中转站] 发往 [北京石景山营业厅]"},
    {"time":"2012-07-06 12:54:41","context":"到达 [北京_同城中转站]"},
    {"time":"2012-07-06 11:11:03","context":"离开 [北京运转中心驻站班组] 发往 [北京_同城中转站]"},
    {"time":"2012-07-06 10:43:21","context":"到达 [北京运转中心驻站班组]"},
    {"time":"2012-07-05 21:18:53","context":"离开 [福建_厦门支公司] 发往 [北京运转中心_航空]"},
    {"time":"2012-07-05 20:07:27","context":"已取件，到达 [福建_厦门支公司]"}
]} 
</code></pre>

<p>```</p>

<blockquote><p>好了，今天就到这里，欢迎拍砖。查快递使用这个api还是不错的，网址是<a href="http://www.kuaidi100.com/" target="_blank">快递查询</a>。</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[小米系统APP初体验]]></title>
    <link href="http://a2bgeek.me/blog/2014/04/13/xiao-mi-xi-tong-appchu-ti-yan.html/"/>
    <updated>2014-04-13T15:38:58+08:00</updated>
    <id>http://a2bgeek.me/blog/2014/04/13/xiao-mi-xi-tong-appchu-ti-yan</id>
    <content type="html"><![CDATA[<p>今天来体验一下小米系统app，小米系统是一个超级app，集成了miui桌面、miui拨号、miui联系人、miui短信和小米云服务。下面来体验一下小米系统。</p>

<h2>miui桌面</h2>

<p><img src="http://a2bgeekblog.qiniudn.com/image/png/miuiapp/miui_launcher0.png" width="320" height="480"/>
<img src="http://a2bgeekblog.qiniudn.com/image/png/miuiapp/miui_launcher1.png" width="320" height="480"/>
<img src="http://a2bgeekblog.qiniudn.com/image/png/miuiapp/miui_launcher2.png" width="320" height="480"/>
<img src="http://a2bgeekblog.qiniudn.com/image/png/miuiapp/miui_launcher3.png" width="320" height="480"/>
<img src="http://a2bgeekblog.qiniudn.com/image/png/miuiapp/miui_launcher4.png" width="320" height="480"/>
<img src="http://a2bgeekblog.qiniudn.com/image/png/miuiapp/miui_launcher5.png" width="320" height="480"/></p>

<h2>miui锁屏</h2>

<p><img src="http://a2bgeekblog.qiniudn.com/image/png/miuiapp/miui_lock0.png" width="320" height="480"/>
<img src="http://a2bgeekblog.qiniudn.com/image/png/miuiapp/miui_lock1.png" width="320" height="480"/></p>

<h2>miui拨号和联系人</h2>

<p><img src="http://a2bgeekblog.qiniudn.com/image/png/miuiapp/miui_contact0.png" width="320" height="480"/>
<img src="http://a2bgeekblog.qiniudn.com/image/png/miuiapp/miui_contact1.png" width="320" height="480"/>
<img src="http://a2bgeekblog.qiniudn.com/image/png/miuiapp/miui_contact2.png" width="320" height="480"/></p>

<h2>miui短信</h2>

<p><img src="http://a2bgeekblog.qiniudn.com/image/png/miuiapp/miui_sms0.png" width="320" height="480"/>
<img src="http://a2bgeekblog.qiniudn.com/image/png/miuiapp/miui_sms1.png" width="320" height="480"/>
<img src="http://a2bgeekblog.qiniudn.com/image/png/miuiapp/miui_sms2.png" width="320" height="480"/></p>

<h2>小米云服务</h2>

<p><img src="http://a2bgeekblog.qiniudn.com/image/png/miuiapp/miui_cloud0.png" width="320" height="480"/></p>

<h2>小米主题商店</h2>

<p><img src="http://a2bgeekblog.qiniudn.com/image/png/miuiapp/miui_theme0.png" width="320" height="480"/>
<img src="http://a2bgeekblog.qiniudn.com/image/png/miuiapp/miui_theme1.png" width="320" height="480"/></p>

<h2>小米应用商店</h2>

<p><img src="http://a2bgeekblog.qiniudn.com/image/png/miuiapp/miui_store0.png" width="320" height="480"/></p>

<blockquote><p>好了，今天就到这里，欢迎拍砖。</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[BeautifulSoup实战]]></title>
    <link href="http://a2bgeek.me/blog/2014/04/09/beautifulsoupshi-zhan.html/"/>
    <updated>2014-04-09T09:08:31+08:00</updated>
    <id>http://a2bgeek.me/blog/2014/04/09/beautifulsoupshi-zhan</id>
    <content type="html"><![CDATA[<p>最近有个项目要用天气数据，看了一些天气网站，决定从<code>中国天气网</code>上抓数据，<code>python</code>抓数据的框架我知道的不多，只听过<code>BeautifulSoup</code>，下面记录一下使用<code>BeautifulSoup</code>抓取数据的全过程。<code>BeautifulSoup</code>的文档见<a href="http://www.crummy.com/software/BeautifulSoup/bs4/doc/index.zh.html">BeautifulSoup官方文档</a>。</p>

<h2>这里大概介绍一下<code>BeautifulSoup</code>的用法，它和javascript的dom一样，把html文档看做一棵树。</h2>

<ul>
<li><p>可以用下面的代码取得根节点：
<code>python
from bs4 import BeautifulSoup
import urllib
rawdata = urllib.urlopen("http://xxx.xxx.xx")
soup = BeautifulSoup(rawdata)
</code>
<code>soup</code>就是根节点了，有了这个根节点就能遍历文档树了。</p></li>
<li><p>find可以快速得到某一个或一簇标签：
<code>python
head = soup.find('head')
</code>
可以得到
<code>html
&lt;head&gt;
  &lt;title&gt;...&lt;title&gt;
  &lt;style&gt;...&lt;style&gt;
&lt;/head&gt;
</code>
也可以加上id的限制:
<code>python
soup.find(id="link3")
</code></p></li>
<li>find_all可以有选择地得到一些标签：
``` python
soup.find_all(&lsquo;a&rsquo;)

<h1>[<a class="sister" href="http://example.com/elsie" id="link1">Elsie</a>,</h1>

<h1><a class="sister" href="http://example.com/lacie" id="link2">Lacie</a>,</h1>

<h1><a class="sister" href="http://example.com/tillie" id="link3">Tillie</a>]</h1>

<p>```</p></li>
<li><code>.</code>也很常用：
``` python
soup.title

<h1>可以得到<title>The Dormouse&rsquo;s story</title></h1>

soup.title.name

<h1>可以得到标签名</h1>

soup.title.string

<h1>可以得到标签之间的文本</h1>

soup.p[&lsquo;class&rsquo;]

<h1>可以得到p标签的class属性</h1>

<p>```</p></li>
<li>contents也比较常用：
``` python
soup.body.contents

<h1>是一个list，包括了body的所有子节点，既有tag也有文本。</h1>

```

<h2>下面介绍抓取中国天气网数据的过程。</h2>

首先打开网页<a href="http://www.weather.com.cn/weather/101160101.shtml">兰州天气</a>，再打开firebug找到我们需要抓取的部分。如图所示：
<img src="http://a2bgeekblog.qiniudn.com/image/png/beatifulsoup.png" alt="" />，其中<code>id="7d"</code>的<code>div</code>就是我们要抓取的部分。下面上代码：
``` python
tag7d = soup.find(id = &ldquo;7d&rdquo;)

<h1>得到id=&ldquo;7d"的div</h1>

tagweatherYubaoBox = tag7d.contents[3]

<h1>得到class=&ldquo;weatherYubaoBox"的div</h1>

resultset = [tagweatherYubaoBox.contents[5].find_all(&ldquo;a&rdquo;), tagweatherYubaoBox.contents[9].find_all(&ldquo;a&rdquo;), tagweatherYubaoBox.contents[13].find_all(&ldquo;a&rdquo;)]

<h1>这里我只想取当天、明天、后天的天气，也就是class=&ldquo;yuBaoTable"的前三个table，接下来就可以循环去数据了。</h1>

result = []
for item in resultset:
  tmp_dict = {}
  tmp_dict[&ldquo;date&rdquo;] = item[0].string
  tmp_dict[&ldquo;imgurl&rdquo;] = &lsquo;&rsquo;.join([&ldquo;<a href="http://www.weather.com.cn">http://www.weather.com.cn</a>&rdquo;, item[1].contents[1][&ldquo;src&rdquo;]])
  tmp_dict[&ldquo;weather&rdquo;] = item[2].string
  if len(item) == 6:

<h1>中国天气网的数据在6点以后就没有白天的数据了，所以这里判断了一下。</h1>

<pre><code>  tmp_dict["low"] = ' '.join([u"夜间", item[3].contents[1].contents[0], item[3].contents[1].contents[1].string])
</code></pre>

  else:
      tmp_dict[&ldquo;high&rdquo;] = &lsquo; &rsquo;.join([u"白天", item[3].contents[1].contents[0], item[3].contents[1].contents[1].string])
      tmp_dict[&ldquo;low&rdquo;] = &lsquo; &rsquo;.join([u"夜间", item[8].contents[1].contents[0], item[8].contents[1].contents[1].string])
  result.append(tmp_dict)
```
最后为大家提供一个我吐血整理的城市名称和城市编号的对应关系，请<a href="http://a2bgeekblog.qiniudn.com/file/py/data.py">点击</a>下载。

<blockquote><p>好了今天就到这里，欢迎拍砖。</p></blockquote></li>
</ul>

]]></content>
  </entry>
  
</feed>
